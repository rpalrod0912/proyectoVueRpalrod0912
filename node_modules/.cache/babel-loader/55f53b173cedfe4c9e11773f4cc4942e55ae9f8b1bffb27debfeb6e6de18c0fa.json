{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*eslint-disable */\nimport { app, auth, createUserWithEmailAndPassword } from \"@/firebaseConfig/firebaseConfig.js\";\nimport router from \"@/router\";\nimport axios from \"axios\";\nexport default {\n  name: \"RegisterCom\",\n  data: () => ({\n    exito: false,\n    userFound: false,\n    valid: true,\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false\n  }),\n  props: {\n    validacionCheck: {\n      Function\n    },\n    validacionNombre: {\n      Function\n    },\n    validacionContraseña: {\n      Function\n    },\n    validacionMail: {\n      Function\n    },\n    validacionRepetirContra: {\n      Function\n    },\n    passwordConfirmationRule: {\n      Function\n    }\n  },\n  methods: {\n    /*eslint-disable */\n    register() {\n      debugger;\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n      //this.postForm();\n      this.registerFireBase();\n    },\n    registerFireBase() {\n      debugger;\n      this.userFound = false;\n      this.exito = false;\n      const registerData = {\n        name: this.registerNombre,\n        mail: this.registerMail,\n        password: this.registerPwd\n      };\n      createUserWithEmailAndPassword(auth, registerData.mail, registerData.password).then(userCredential => {\n        this.exito = true;\n        debugger;\n        const user = userCredential.user;\n        console.log(user);\n        console.log(data);\n        console.log(\"Registrado con exito\");\n        router.push(\"/\");\n      }).catch(error => {\n        console.log(\"YA EXISTE\");\n        this.userFound = true;\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n    },\n    async postForm() {\n      this.userFound = false;\n      this.exito = false;\n      const registerData = {\n        name: this.registerNombre,\n        mail: this.registerMail,\n        password: this.registerPwd\n      };\n      debugger;\n      console.log(\"REGISTRANDO\");\n      const data = await axios.post(\"http://localhost:3003/v1/api/users/\", registerData).then(res => res.data).catch(error => console.log(error));\n      if (data === \"YAEXISTE\") {\n        this.userFound = true;\n      } else {\n        this.exito = true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["app","auth","createUserWithEmailAndPassword","router","axios","name","data","exito","userFound","valid","registerNombre","registerApellidos","registerMail","registerPwd","registerConfirmPwd","registerChecked","props","validacionCheck","Function","validacionNombre","validacionContraseña","validacionMail","validacionRepetirContra","passwordConfirmationRule","methods","register","console","log","$refs","form","validate","registerFireBase","registerData","mail","password","then","userCredential","user","push","catch","error","errorCode","code","errorMessage","message","postForm","post","res"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/components/RegisterCom.vue"],"sourcesContent":["<template>\n  <v-card-text class=\"mt-12\">\n    <h4 class=\"text-center\">Registrate para crear tu cuenta</h4>\n\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\">\n        <v-form ref=\"form\" v-model=\"valid\" miValidacion>\n          <v-row>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-text-field\n                v-model=\"registerNombre\"\n                label=\"Nombre\"\n                outlined\n                dense\n                color=\"blue\"\n                autocomplete=\"false\"\n                class=\"mt-4\"\n                :rules=\"validacionNombre\"\n                required\n              />\n            </v-col>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-text-field\n                v-model=\"registerApellidos\"\n                label=\"Apellidos\"\n                outlined\n                dense\n                color=\"blue\"\n                autocomplete=\"false\"\n                class=\"mt-4\"\n                :rules=\"validacionNombre\"\n                required\n              />\n            </v-col>\n          </v-row>\n          <v-text-field\n            v-model=\"registerMail\"\n            label=\"Correo Electrónico\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            :rules=\"validacionMail\"\n            required\n          />\n          <v-text-field\n            v-model=\"registerPwd\"\n            label=\"Contraseña\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            type=\"password\"\n            :rules=\"validacionContraseña\"\n            required\n          />\n          <v-text-field\n            v-model=\"registerConfirmPwd\"\n            label=\"Repetir Contraseña\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            type=\"password\"\n            :rules=\"validacionContraseña.concat(passwordConfirmationRule)\"\n            required\n          />\n          <v-row>\n            <v-col cols=\"12\" sm=\"7\">\n              <v-checkbox\n                v-model=\"registerChecked\"\n                :rules=\"validacionCheck\"\n                label=\"Acepto términos y condiciones\"\n                class=\"mt-n1\"\n                color=\"blue\"\n                required\n              >\n              </v-checkbox>\n            </v-col>\n          </v-row>\n          <h3 style=\"color: red\" v-if=\"userFound\">EL USUARIO YA EXISTE</h3>\n          <h3 style=\"color: green\" v-if=\"exito\">\n            REGISTRO CON EXITO, INICIA SESION\n          </h3>\n          <v-btn\n            :disabled=\"!valid\"\n            color=\"blue\"\n            @click=\"register()\"\n            dark\n            block\n            tile\n            >REGISTRARME</v-btn\n          >\n        </v-form>\n      </v-col>\n    </v-row>\n  </v-card-text>\n</template>\n\n<script>\n/*eslint-disable */\nimport {\n  app,\n  auth,\n  createUserWithEmailAndPassword,\n} from \"@/firebaseConfig/firebaseConfig.js\";\nimport router from \"@/router\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"RegisterCom\",\n  data: () => ({\n    exito: false,\n    userFound: false,\n    valid: true,\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n  }),\n  props: {\n    validacionCheck: { Function },\n    validacionNombre: { Function },\n    validacionContraseña: { Function },\n    validacionMail: { Function },\n    validacionRepetirContra: { Function },\n    passwordConfirmationRule: { Function },\n  },\n  methods: {\n    /*eslint-disable */\n    register() {\n      debugger;\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n      //this.postForm();\n      this.registerFireBase();\n    },\n    registerFireBase() {\n      debugger;\n      this.userFound = false;\n      this.exito = false;\n      const registerData = {\n        name: this.registerNombre,\n        mail: this.registerMail,\n        password: this.registerPwd,\n      };\n      createUserWithEmailAndPassword(\n        auth,\n        registerData.mail,\n        registerData.password\n      )\n        .then((userCredential) => {\n          this.exito = true;\n\n          debugger;\n          const user = userCredential.user;\n          console.log(user);\n          console.log(data);\n          console.log(\"Registrado con exito\");\n          router.push(\"/\");\n        })\n        .catch((error) => {\n          console.log(\"YA EXISTE\");\n          this.userFound = true;\n\n          const errorCode = error.code;\n          const errorMessage = error.message;\n        });\n    },\n    async postForm() {\n      this.userFound = false;\n      this.exito = false;\n      const registerData = {\n        name: this.registerNombre,\n        mail: this.registerMail,\n        password: this.registerPwd,\n      };\n      debugger;\n      console.log(\"REGISTRANDO\");\n      const data = await axios\n        .post(\"http://localhost:3003/v1/api/users/\", registerData)\n        .then((res) => res.data)\n        .catch((error) => console.log(error));\n      if (data === \"YAEXISTE\") {\n        this.userFound = true;\n      } else {\n        this.exito = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-application .rounded-bl-xl {\n  border-bottom-left-radius: 300px !important;\n}\n.v-application .rounded-br-xl {\n  border-bottom-right-radius: 300px !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}