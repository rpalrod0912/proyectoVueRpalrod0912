{"ast":null,"code":"import LoginCom from \"@/components/LoginCom.vue\";\nimport RegisterCom from \"@/components/RegisterCom.vue\";\nexport default {\n  /*eslint-disable */\n  /*Documentacion de Vuetify Validacion */\n  /*https://vuetifyjs.com/en/components/forms/#vuelidate */\n  data: () => ({\n    valid: true,\n    //emailLogIn: \"\",\n    //pwdLogIn: \"\",\n\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n    step: 1,\n    validacionNombre: [val => !!val || \"El nombre es obligatorio\", val => val && val.length <= 15 || \"El nombre debe ser menor a 10 caracteres\"],\n    validacionContraseña: [val => /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) || \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\"],\n    validacionMail: [val => /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) || \"Debe contener un @, una extensión . al final. Ejemplo: micorreo@gmail.com\"],\n    validacionRepetirContra: [val => /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) || \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\"],\n    validacionCheck: [v => !!v || \"Debes aceptar terminos y condiciones para registrarte\"]\n  }),\n  methods: {\n    register() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    }\n  },\n  props: {\n    source: String\n  },\n  /*Para validar contraseñas tenemos que llamar a varias variables de data, como es un metodo mas complego,\n    realizamos un metodo para validar en computed\n    llamando variables de data, luiego en template llamamos al metodo en :rules=metodo1.concat(metodo2)\n    para aplicar las reglas de distintos metodos, pues son dos arrays con metodos y buscamos concatenarlos\n    */\n  computed: {\n    passwordConfirmationRule() {\n      return () => this.registerPwd === this.registerConfirmPwd || \"Las contraseñas deben coincidir\";\n    }\n  },\n  components: {\n    LoginCom,\n    RegisterCom\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,QAAO,MAAO,2BAA2B;AAChD,OAAOC,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACb;EACA;EACA;EACAC,IAAI,EAAE,OAAO;IACXC,KAAK,EAAE,IAAI;IACX;IACA;;IAEAC,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,EAAE;IACfC,kBAAkB,EAAE,EAAE;IACtBC,eAAe,EAAE,KAAK;IAEtBC,IAAI,EAAE,CAAC;IAEPC,gBAAgB,EAAE,CACfC,GAAG,IAAK,CAAC,CAACA,GAAE,IAAK,0BAA0B,EAC3CA,GAAG,IACDA,GAAE,IAAKA,GAAG,CAACC,MAAK,IAAK,EAAE,IAAK,0CAA0C,CAC1E;IACDC,oBAAoB,EAAE,CACnBF,GAAG,IACF,yDAAyD,CAACG,IAAI,CAACH,GAAG,KAClE,kGAAkG,CACrG;IACDI,cAAc,EAAE,CACbJ,GAAG,IACF,kCAAkC,CAACG,IAAI,CAACH,GAAG,KAC3C,2EAA2E,CAC9E;IACDK,uBAAuB,EAAE,CACtBL,GAAG,IACF,yDAAyD,CAACG,IAAI,CAACH,GAAG,KAClE,kGAAkG,CACrG;IACDM,eAAe,EAAE,CACdC,CAAC,IAAK,CAAC,CAACA,KAAK,uDAAuD;EAEzE,CAAC,CAAC;EACFC,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,QAAQ,EAAE;IAC5B;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,MAAM,EAAEC;EACV,CAAC;EACD;;;;;EAKAC,QAAQ,EAAE;IACRC,wBAAwB,GAAG;MACzB,OAAO,MACL,IAAI,CAACxB,WAAU,KAAM,IAAI,CAACC,kBAAiB,IAC3C,iCAAiC;IACrC;EACF,CAAC;EACDwB,UAAU,EAAE;IAAEhC,QAAQ;IAAEC;EAAY;AACtC,CAAC","names":["LoginCom","RegisterCom","data","valid","registerNombre","registerApellidos","registerMail","registerPwd","registerConfirmPwd","registerChecked","step","validacionNombre","val","length","validacionContraseña","test","validacionMail","validacionRepetirContra","validacionCheck","v","methods","register","console","log","$refs","form","validate","props","source","String","computed","passwordConfirmationRule","components"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"10\">\n        <v-card class=\"elevation-6 mt-10\">\n          <v-window v-model=\"step\">\n            <v-window-item :value=\"1\">\n              <v-row>\n                <LoginCom\n                  :validacionMail=\"this.validacionMail\"\n                  :validacionContraseña=\"this.validacionContraseña\"\n                ></LoginCom>\n                <v-col cols=\"12\" md=\"6\" class=\"blue rounded-bl-xl\">\n                  <div style=\"text-align: center; padding: 180px 0\">\n                    <v-card-text class=\"white--text\">\n                      <h3 class=\"text-center\">¿No tienes una cuenta?</h3>\n                    </v-card-text>\n                    <div class=\"text-center\">\n                      <v-btn tile outlined dark @click=\"step++\"\n                        >REGISTRATE</v-btn\n                      >\n                    </div>\n                  </div>\n                </v-col>\n              </v-row>\n            </v-window-item>\n            <v-window-item :value=\"2\">\n              <v-row>\n                <v-col cols=\"12\" md=\"6\" class=\"blue rounded-br-xl\">\n                  <div style=\"text-align: center; padding: 180px 0\">\n                    <v-card-text class=\"white--text\">\n                      <h3 class=\"text-center\">¿Ya estás registrado?</h3>\n                      <h6 class=\"text-center\">Inicia sesión en tu cuenta</h6>\n                    </v-card-text>\n                    <div class=\"text-center\">\n                      <v-btn tile outlined dark @click=\"step--\"\n                        >INICIAR SESIÓN</v-btn\n                      >\n                    </div>\n                  </div>\n                </v-col>\n                <RegisterCom\n                  :validacionCheck=\"this.validacionCheck\"\n                  :validacionNombre=\"this.validacionNombre\"\n                  :validacionContraseña=\"this.validacionContraseña\"\n                  :validacionMail=\"this.validacionMail\"\n                  :validacionRepetirContra=\"this.validacionRepetirContra\"\n                  :passwordConfirmationRule=\"this.passwordConfirmationRule\"\n                  :register=\"this.register\"\n                ></RegisterCom>\n                <v-col cols=\"12\" md=\"6\"> </v-col>\n              </v-row>\n            </v-window-item>\n          </v-window>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport LoginCom from \"@/components/LoginCom.vue\";\nimport RegisterCom from \"@/components/RegisterCom.vue\";\n\nexport default {\n  /*eslint-disable */\n  /*Documentacion de Vuetify Validacion */\n  /*https://vuetifyjs.com/en/components/forms/#vuelidate */\n  data: () => ({\n    valid: true,\n    //emailLogIn: \"\",\n    //pwdLogIn: \"\",\n\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n\n    step: 1,\n\n    validacionNombre: [\n      (val) => !!val || \"El nombre es obligatorio\",\n      (val) =>\n        (val && val.length <= 15) || \"El nombre debe ser menor a 10 caracteres\",\n    ],\n    validacionContraseña: [\n      (val) =>\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n        \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n    ],\n    validacionMail: [\n      (val) =>\n        /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) ||\n        \"Debe contener un @, una extensión . al final. Ejemplo: micorreo@gmail.com\",\n    ],\n    validacionRepetirContra: [\n      (val) =>\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n        \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n    ],\n    validacionCheck: [\n      (v) => !!v || \"Debes aceptar terminos y condiciones para registrarte\",\n    ],\n  }),\n  methods: {\n    register() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    },\n  },\n  props: {\n    source: String,\n  },\n  /*Para validar contraseñas tenemos que llamar a varias variables de data, como es un metodo mas complego,\n    realizamos un metodo para validar en computed\n    llamando variables de data, luiego en template llamamos al metodo en :rules=metodo1.concat(metodo2)\n    para aplicar las reglas de distintos metodos, pues son dos arrays con metodos y buscamos concatenarlos\n    */\n  computed: {\n    passwordConfirmationRule() {\n      return () =>\n        this.registerPwd === this.registerConfirmPwd ||\n        \"Las contraseñas deben coincidir\";\n    },\n  },\n  components: { LoginCom, RegisterCom },\n};\n</script>\n<style scoped>\n.v-application .rounded-bl-xl {\n  border-bottom-left-radius: 300px !important;\n}\n.v-application .rounded-br-xl {\n  border-bottom-right-radius: 300px !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}