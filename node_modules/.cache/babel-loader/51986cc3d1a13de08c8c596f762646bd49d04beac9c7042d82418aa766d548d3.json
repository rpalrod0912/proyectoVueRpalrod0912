{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\n\n/*eslint-disable */\nexport default {\n  created() {\n    debugger;\n    this.userData = this.fetchUserData(this.$store.state.currentUser);\n    console.log(this.userData);\n  },\n  data() {\n    return {\n      userData: {\n        userName: \"Rafael\",\n        userLastName: \"Palomino Rodríguez\",\n        userMail: \"micorreo@gmail.com\",\n        userPwd: \"Rafapr_01#\"\n      },\n      test: \"true\",\n      esValido: false,\n      valid: true,\n      //emailLogIn: \"\",\n      //pwdLogIn: \"\",\n      registerConfirmPwd: \"\",\n      registerChecked: false,\n      validacionNombre: [val => !!val || \"El nombre es obligatorio\", val => val && val.length <= 15 || \"El nombre debe ser menor a 10 caracteres\"],\n      validacionContraseña: [val => /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) || \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\"],\n      validacionMail: [val => /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) || \"Debe contener un @, una extensión . al final. Ejemplo: micorreo@gmail.com\"],\n      validacionRepetirContra: [val => /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) || \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\"],\n      validacionCheck: [v => !!v || \"Debes aceptar terminos y condiciones para registrarte\"]\n    };\n  },\n  methods: {\n    register() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    }\n  },\n  async fetchUserData(id) {\n    const data = await fetch(`http://localhost:3003/v1/api/users/id/${id}`).then(res => res.json());\n    return data;\n  },\n  computed: {\n    passwordConfirmationRule() {\n      return () => this.userData.userPwd === this.registerConfirmPwd || \"Las contraseñas deben coincidir\";\n    },\n    validateName() {\n      console.log(this.userData.userName);\n      this.userData.userName.length <= 15 ? true : false;\n    }\n  },\n  watch: {\n    userData: {\n      handler(newVal, oldVal) {\n        this.validateAll();\n      },\n      deep: true\n    }\n  },\n  components: {\n    NavBar\n  }\n};","map":{"version":3,"mappings":"AAkGA,OAAOA,MAAK,MAAO,yBAAyB;;AAE5C;AACA,eAAe;EACbC,OAAO,GAAG;IACR;IACA,IAAI,CAACC,QAAO,GAAI,IAAI,CAACC,aAAa,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC;IACjEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,QAAQ,CAAC;EAC5B,CAAC;EACDO,IAAI,GAAG;IACL,OAAO;MACLP,QAAQ,EAAE;QACRQ,QAAQ,EAAE,QAAQ;QAClBC,YAAY,EAAE,oBAAoB;QAClCC,QAAQ,EAAE,oBAAoB;QAC9BC,OAAO,EAAE;MACX,CAAC;MACDC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,IAAI;MACX;MACA;MACAC,kBAAkB,EAAE,EAAE;MACtBC,eAAe,EAAE,KAAK;MACtBC,gBAAgB,EAAE,CACfC,GAAG,IAAK,CAAC,CAACA,GAAE,IAAK,0BAA0B,EAC3CA,GAAG,IACDA,GAAE,IAAKA,GAAG,CAACC,MAAK,IAAK,EAAE,IACxB,0CAA0C,CAC7C;MACDC,oBAAoB,EAAE,CACnBF,GAAG,IACF,yDAAyD,CAACN,IAAI,CAACM,GAAG,KAClE,kGAAkG,CACrG;MACDG,cAAc,EAAE,CACbH,GAAG,IACF,kCAAkC,CAACN,IAAI,CAACM,GAAG,KAC3C,2EAA2E,CAC9E;MACDI,uBAAuB,EAAE,CACtBJ,GAAG,IACF,yDAAyD,CAACN,IAAI,CAACM,GAAG,KAClE,kGAAkG,CACrG;MACDK,eAAe,EAAE,CACdC,CAAC,IAAK,CAAC,CAACA,KAAK,uDAAuD;IAEzE,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,GAAG;MACTrB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI,CAACqB,KAAK,CAACC,IAAI,CAACC,QAAQ,EAAE;IAC5B;EACF,CAAC;EACD,MAAM5B,aAAa,CAAC6B,EAAE,EAAE;IACtB,MAAMvB,IAAG,GAAI,MAAMwB,KAAK,CACrB,yCAAwCD,EAAG,GAC7C,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;IAC3B,OAAO3B,IAAI;EACb,CAAC;EACD4B,QAAQ,EAAE;IACRC,wBAAwB,GAAG;MACzB,OAAO,MACL,IAAI,CAACpC,QAAQ,CAACW,OAAM,KAAM,IAAI,CAACI,kBAAiB,IAChD,iCAAiC;IACrC,CAAC;IACDsB,YAAY,GAAG;MACbhC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,QAAQ,CAACQ,QAAQ,CAAC;MACnC,IAAI,CAACR,QAAQ,CAACQ,QAAQ,CAACW,MAAK,IAAK,EAAC,GAAI,IAAG,GAAI,KAAK;IACpD;EACF,CAAC;EACDmB,KAAK,EAAE;IACLtC,QAAQ,EAAE;MACRuC,OAAO,CAACC,MAAM,EAAEC,MAAM,EAAE;QACtB,IAAI,CAACC,WAAW,EAAE;MACpB,CAAC;MACDC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,UAAU,EAAE;IAAE9C;EAAO;AACvB,CAAC","names":["NavBar","created","userData","fetchUserData","$store","state","currentUser","console","log","data","userName","userLastName","userMail","userPwd","test","esValido","valid","registerConfirmPwd","registerChecked","validacionNombre","val","length","validacionContraseña","validacionMail","validacionRepetirContra","validacionCheck","v","methods","register","$refs","form","validate","id","fetch","then","res","json","computed","passwordConfirmationRule","validateName","watch","handler","newVal","oldVal","validateAll","deep","components"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/ProfileView.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n\n  <div class=\"contenedor\">\n    <v-card class=\"elevation-6 mt-10 formCard\">\n      <h1 class=\"text-center\">{{ userData.userName }}</h1>\n      <v-avatar class=\"avatar\" color=\"surface-variant\" size=\"200\"></v-avatar>\n      <v-row align=\"center\" justify=\"center\">\n        <v-col cols=\"12\" sm=\"8\">\n          <v-form class=\"profileForm\" ref=\"form\" miValidacion>\n            <v-row>\n              <v-col cols=\"12\" sm=\"6\">\n                <v-text-field\n                  v-model=\"userData.userName\"\n                  label=\"Nombre\"\n                  variant=\"solo\"\n                  clearable\n                  color=\"blue\"\n                  class=\"mt-4\"\n                  :rules=\"this.validacionNombre\"\n                  required\n                />\n              </v-col>\n              <v-col cols=\"12\" sm=\"6\">\n                <v-text-field\n                  v-model=\"userName\"\n                  label=\"Apellidos\"\n                  outlined\n                  dense\n                  color=\"blue\"\n                  autocomplete=\"false\"\n                  class=\"mt-4\"\n                  :rules=\"validacionNombre\"\n                  required\n                />\n              </v-col>\n            </v-row>\n            <v-text-field\n              v-model=\"userData.userMail\"\n              label=\"Correo Electrónico\"\n              outlined\n              dense\n              color=\"blue\"\n              autocomplete=\"false\"\n              :rules=\"validacionMail\"\n              required\n            />\n            <v-text-field\n              v-model=\"userData.userPwd\"\n              label=\"Contraseña\"\n              outlined\n              dense\n              color=\"blue\"\n              autocomplete=\"false\"\n              type=\"password\"\n              :rules=\"validacionContraseña\"\n            />\n            <v-text-field\n              v-model=\"registerConfirmPwd\"\n              label=\"Repetir Contraseña\"\n              outlined\n              dense\n              color=\"blue\"\n              autocomplete=\"false\"\n              type=\"password\"\n              :rules=\"validacionContraseña.concat(passwordConfirmationRule)\"\n              required\n            />\n            <v-row>\n              <v-col cols=\"12\" sm=\"7\">\n                <v-checkbox\n                  v-model=\"registerChecked\"\n                  :rules=\"validacionCheck\"\n                  label=\"Quiero realizar cambios en mi cuenta\"\n                  class=\"mt-n1\"\n                  color=\"blue\"\n                  required\n                >\n                </v-checkbox>\n              </v-col>\n            </v-row>\n            <v-btn\n              :disabled=\"!valid\"\n              color=\"blue\"\n              @click=\"register()\"\n              dark\n              block\n              tile\n              >GUARDAR CAMBIOS</v-btn\n            >\n          </v-form>\n        </v-col>\n      </v-row>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\n\n/*eslint-disable */\nexport default {\n  created() {\n    debugger;\n    this.userData = this.fetchUserData(this.$store.state.currentUser);\n    console.log(this.userData);\n  },\n  data() {\n    return {\n      userData: {\n        userName: \"Rafael\",\n        userLastName: \"Palomino Rodríguez\",\n        userMail: \"micorreo@gmail.com\",\n        userPwd: \"Rafapr_01#\",\n      },\n      test: \"true\",\n      esValido: false,\n      valid: true,\n      //emailLogIn: \"\",\n      //pwdLogIn: \"\",\n      registerConfirmPwd: \"\",\n      registerChecked: false,\n      validacionNombre: [\n        (val) => !!val || \"El nombre es obligatorio\",\n        (val) =>\n          (val && val.length <= 15) ||\n          \"El nombre debe ser menor a 10 caracteres\",\n      ],\n      validacionContraseña: [\n        (val) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n          \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n      ],\n      validacionMail: [\n        (val) =>\n          /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) ||\n          \"Debe contener un @, una extensión . al final. Ejemplo: micorreo@gmail.com\",\n      ],\n      validacionRepetirContra: [\n        (val) =>\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n          \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n      ],\n      validacionCheck: [\n        (v) => !!v || \"Debes aceptar terminos y condiciones para registrarte\",\n      ],\n    };\n  },\n  methods: {\n    register() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    },\n  },\n  async fetchUserData(id) {\n    const data = await fetch(\n      `http://localhost:3003/v1/api/users/id/${id}`\n    ).then((res) => res.json());\n    return data;\n  },\n  computed: {\n    passwordConfirmationRule() {\n      return () =>\n        this.userData.userPwd === this.registerConfirmPwd ||\n        \"Las contraseñas deben coincidir\";\n    },\n    validateName() {\n      console.log(this.userData.userName);\n      this.userData.userName.length <= 15 ? true : false;\n    },\n  },\n  watch: {\n    userData: {\n      handler(newVal, oldVal) {\n        this.validateAll();\n      },\n      deep: true,\n    },\n  },\n  components: { NavBar },\n};\n</script>\n\n<style scoped>\n.v-application .rounded-bl-xl {\n  border-bottom-left-radius: 300px !important;\n}\n.v-application .rounded-br-xl {\n  border-bottom-right-radius: 300px !important;\n}\n.avatar {\n  display: flex;\n  margin: 0 auto;\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n}\n.profileForm {\n  margin-bottom: 6rem;\n}\n\n.formCard {\n  width: 80%;\n  margin-bottom: 1rem;\n}\n.contenedor {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  background-color: #49d9d9;\n}\nbody {\n  background-color: aqua;\n  margin: 0%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}