{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport axios from \"axios\";\nimport { recarga } from \"@/helpers/basicFunctions.js\";\nimport { API_URL } from \"@/helpers/basicFunctions\";\n\n/*eslint-disable */\nexport default {\n  name: \"ProductView\",\n  created() {\n    this.productData = JSON.parse(this.$route.query.prodData);\n    console.log(this.productData);\n  },\n  data() {\n    return {\n      productData: null,\n      tallaElegida: false,\n      colorElegido: false,\n      boton: false,\n      colores: [{\n        color: \"Blanco\",\n        estilo: \"lightgrey\"\n      }, {\n        color: \"Negro\",\n        estilo: \"lightgrey\"\n      }, {\n        color: \"Azul\",\n        estilo: \"blue\"\n      }, {\n        color: \"Gris\",\n        estilo: \"lightgrey\"\n      }, {\n        color: \"Rosa\",\n        estilo: \"pink\"\n      }, {\n        color: \"Rojo\",\n        estilo: \"red\"\n      }, {\n        color: \"Verde\",\n        estilo: \"green\"\n      }],\n      reload: recarga,\n      añadido: false,\n      mensaje: null\n    };\n  },\n  methods: {\n    async añadirCarrito() {\n      if (this.$store.state.currentUser === null) {\n        return;\n      }\n      const id = this.$store.state.currentUser;\n      const datos = {\n        userId: id,\n        idProduct: this.productData.id\n      };\n      console.log(datos);\n      /*\n      const data = await axios\n        .post(`${API_URL}carts/`, datos)\n        .then((res) => res.data)\n        .catch((error) => console.log(error));\n       this.$store.commit(\"setCurrentCartLength\", await this.contarProd(id));\n      */\n      if (data !== null) {\n        this.añadido = true;\n        return true;\n      }\n      return false;\n    },\n    async contarProd(id) {\n      let cantidad = 0;\n      const data = await fetch(`${API_URL}carts/${id}`).then(res => res.json());\n      for (let i = 0; i <= data.cesta.length - 1; i++) {\n        cantidad += parseInt(data.cesta[i].cantidad);\n      }\n      return cantidad;\n    },\n    activarBoton() {\n      if (this.tallaElegida !== false && this.colorElegido !== false) {\n        this.boton = true;\n      }\n    },\n    selectTalla(talla) {\n      if (this.tallaElegida !== talla) {\n        this.tallaElegida = talla;\n        console.log(this.tallaElegida);\n        this.activarBoton();\n      }\n    },\n    selectColor(color) {\n      if (this.colorElegido !== color) {\n        this.colorElegido = color;\n        console.log(this.colorElegido);\n        this.activarBoton();\n      }\n    },\n    encontrarColor(valor) {\n      console.log(this.productData);\n      const encontrarEstilo = this.colores.find(val => val.color === valor);\n      return encontrarEstilo.estilo;\n    }\n  },\n  components: {\n    NavBar\n  },\n  watch: {\n    añadido(newval, oldval) {\n      if (newval === true) {\n        this.reload();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["NavBar","axios","recarga","API_URL","name","created","productData","JSON","parse","$route","query","prodData","console","log","data","tallaElegida","colorElegido","boton","colores","color","estilo","reload","añadido","mensaje","methods","añadirCarrito","$store","state","currentUser","id","datos","userId","idProduct","contarProd","cantidad","fetch","then","res","json","i","cesta","length","parseInt","activarBoton","selectTalla","talla","selectColor","encontrarColor","valor","encontrarEstilo","find","val","components","watch","newval","oldval"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/ProductView.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n  <div class=\"contenedor\">\n    <v-card class=\"elevation-6 mt-10\">\n      <v-card\n        color=\"#3853D8\"\n        height=\"150px\"\n        tle\n        flat\n        class=\"d-flex align-center justify-center\"\n        dark\n      >\n        <v-row>\n          <v-col cols=\"12\" sm=\"12\">\n            <h2 class=\"text-center\">{{ productData.nombre }}</h2>\n          </v-col>\n        </v-row>\n      </v-card>\n      <div class=\"presentacion\">\n        <div style=\"width: 40%\">\n          <v-card color=\"#c0bdbd\" width=\"600\" height=\"430\" class=\"d-flex ml-10\">\n            <v-img :src=\"productData.imagen\"></v-img>\n          </v-card>\n          <div\n            style=\"\n              display: flex;\n              flex-direction: column;\n              width: 50%;\n              justify-content: center;\n              margin: 4rem;\n              font-size: 1.4rem;\n            \"\n          >\n            <h2>Descripción</h2>\n            <p>{{ productData.descripcion }}</p>\n          </div>\n        </div>\n        <div class=\"textoPresentacion\">\n          <h1>Caracteristicas del producto</h1>\n          <p>Marca:{{ productData.marca }}</p>\n          <p>Tipo de Calzado: {{ productData.sexo }}</p>\n          <p>Categoría: {{ productData.categoria }}</p>\n          <p>Utilidad: {{ productData.utilidad }}</p>\n\n          <br />\n          <h2>Colores Disponibles</h2>\n          <v-chip-group column mandatory>\n            <v-chip\n              v-for=\"colorProd in productData.color\"\n              :key=\"colorProd\"\n              filter\n              @click=\"selectColor(colorProd)\"\n              class=\"ma-2\"\n              :color=\"encontrarColor(colorProd)\"\n            >\n              {{ colorProd }}\n            </v-chip>\n          </v-chip-group>\n\n          <h2>Tallas Disponibles</h2>\n          <v-chip-group column mandatory>\n            <v-chip\n              v-for=\"talla in productData.talla\"\n              filter\n              @click=\"selectTalla(talla)\"\n              :key=\"talla\"\n              class=\"ma-2\"\n            >\n              {{ talla }}\n            </v-chip>\n          </v-chip-group>\n          <div>\n            <p v-if=\"!boton\" style=\"color: red\">\n              Selecciona un color y una talla para añadir al carrito\n            </p>\n          </div>\n\n          <v-dialog transition=\"dialog-top-transition\" width=\"auto\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                rounded=\"pill\"\n                @click=\"this.añadirCarrito\"\n                :disabled=\"!boton\"\n                style=\"margin-top: 2rem\"\n                color=\"#69F801\"\n                v-bind=\"props\"\n                >AÑADIR AL CARRITO</v-btn\n              >\n            </template>\n            <template v-slot:default=\"{ isActive }\">\n              <v-card v-if=\"$store.state.currentUser === null\">\n                <v-card-text class=\"centradoAviso\">\n                  <v-icon class=\"text-h2 pa-12\" color=\"red\">mdi-cancel</v-icon>\n                  <div class=\"text-h2 pa-12\">\n                    Inicia sesión para añadir al carrito\n                  </div>\n                </v-card-text>\n                <v-card-actions class=\"justify-end\">\n                  <v-btn variant=\"text\" @click=\"isActive.value = false\"\n                    >Cerrar</v-btn\n                  >\n                </v-card-actions>\n              </v-card>\n              <v-card v-else>\n                <v-card-text class=\"centradoAviso\">\n                  <v-icon class=\"text-h2 pa-12\" color=\"blue\"\n                    >mdi-checkbox-marked-circle</v-icon\n                  >\n                  <div class=\"text-h2 pa-12\">Producto añadido al carrito</div>\n                </v-card-text>\n                <v-card-actions class=\"justify-end\">\n                  <v-btn variant=\"text\" @click=\"isActive.value = false\"\n                    >Cerrar</v-btn\n                  >\n                </v-card-actions>\n              </v-card>\n            </template>\n          </v-dialog>\n        </div>\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport axios from \"axios\";\nimport { recarga } from \"@/helpers/basicFunctions.js\";\nimport { API_URL } from \"@/helpers/basicFunctions\";\n\n/*eslint-disable */\nexport default {\n  name: \"ProductView\",\n  created() {\n    this.productData = JSON.parse(this.$route.query.prodData);\n    console.log(this.productData);\n  },\n  data() {\n    return {\n      productData: null,\n      tallaElegida: false,\n      colorElegido: false,\n      boton: false,\n      colores: [\n        {\n          color: \"Blanco\",\n          estilo: \"lightgrey\",\n        },\n        {\n          color: \"Negro\",\n          estilo: \"lightgrey\",\n        },\n        {\n          color: \"Azul\",\n          estilo: \"blue\",\n        },\n        { color: \"Gris\", estilo: \"lightgrey\" },\n        { color: \"Rosa\", estilo: \"pink\" },\n        {\n          color: \"Rojo\",\n          estilo: \"red\",\n        },\n        {\n          color: \"Verde\",\n          estilo: \"green\",\n        },\n      ],\n      reload: recarga,\n      añadido: false,\n      mensaje: null,\n    };\n  },\n  methods: {\n    async añadirCarrito() {\n      if (this.$store.state.currentUser === null) {\n        return;\n      }\n      const id = this.$store.state.currentUser;\n\n      const datos = {\n        userId: id,\n        idProduct: this.productData.id,\n      };\n      console.log(datos);\n      /*\n      const data = await axios\n        .post(`${API_URL}carts/`, datos)\n        .then((res) => res.data)\n        .catch((error) => console.log(error));\n\n      this.$store.commit(\"setCurrentCartLength\", await this.contarProd(id));\n      */\n      if (data !== null) {\n        this.añadido = true;\n        return true;\n      }\n      return false;\n    },\n    async contarProd(id) {\n      let cantidad = 0;\n      const data = await fetch(`${API_URL}carts/${id}`).then((res) =>\n        res.json()\n      );\n      for (let i = 0; i <= data.cesta.length - 1; i++) {\n        cantidad += parseInt(data.cesta[i].cantidad);\n      }\n\n      return cantidad;\n    },\n    activarBoton() {\n      if (this.tallaElegida !== false && this.colorElegido !== false) {\n        this.boton = true;\n      }\n    },\n    selectTalla(talla) {\n      if (this.tallaElegida !== talla) {\n        this.tallaElegida = talla;\n        console.log(this.tallaElegida);\n        this.activarBoton();\n      }\n    },\n    selectColor(color) {\n      if (this.colorElegido !== color) {\n        this.colorElegido = color;\n        console.log(this.colorElegido);\n        this.activarBoton();\n      }\n    },\n    encontrarColor(valor) {\n      console.log(this.productData);\n      const encontrarEstilo = this.colores.find((val) => val.color === valor);\n      return encontrarEstilo.estilo;\n    },\n  },\n  components: { NavBar },\n  watch: {\n    añadido(newval, oldval) {\n      if (newval === true) {\n        this.reload();\n      }\n    },\n  },\n};\n</script>\n\n<style>\n@media (max-width: 1300px) {\n  .presentacion {\n  }\n}\n@media (max-width: 1200px) {\n  .presentacion {\n    flex-wrap: wrap;\n  }\n}\n.presentacion {\n  width: auto;\n  justify-content: space-evenly;\n  margin-top: 1.4rem;\n  margin-bottom: 1.4rem;\n  display: flex;\n  flex-wrap: no-wrap;\n  margin-left: 6rem;\n  margin-right: 6rem;\n}\n.contenedor {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  background-color: #e8ebeb;\n}\n.textoPresentacion {\n  font-size: 1.4rem;\n  margin-left: 6rem;\n  width: 40rem;\n}\n.formCard {\n  width: 80%;\n  margin-bottom: 1rem;\n}\n\n.centradoAviso {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}