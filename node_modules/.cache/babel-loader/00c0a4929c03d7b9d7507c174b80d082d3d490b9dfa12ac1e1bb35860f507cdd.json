{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport { API_URL, recarga } from \"@/helpers/basicFunctions.js\";\n/*eslint-disable */\nexport default {\n  name: \"CarritoView\",\n  async created() {\n    this.yourCart = JSON.parse(localStorage.getItem(`carrito_${this.$store.state.currentMail}`));\n    this.cartId = JSON.parse(this.$route.query.id);\n    await this.cargarCarrito(this.cartId);\n    await this.cargarProductos(this.yourCart.cesta);\n  },\n  data: () => ({\n    products: [],\n    loading: false,\n    cartId: null,\n    yourCart: null,\n    reload: recarga\n  }),\n  methods: {\n    /*\n    async contarProd(id) {\n      let cantidad = 0;\n      const data = await fetch(`${API_URL}carts/${id}`).then((res) =>\n        res.json()\n      );\n      for (let i = 0; i <= data.cesta.length - 1; i++) {\n        cantidad += parseInt(data.cesta[i].cantidad);\n      }\n       return cantidad;\n    },*/\n    eliminarCarrito(userId, idProduct) {\n      const datos = {\n        userId,\n        idProduct\n      };\n      const mail = this.$store.state.currentMail;\n      const carritoEditar = JSON.parse(localStorage.getItem(`carrito_${mail}`));\n      const productoExiste = carritoEditar.cesta.findIndex(producto => {\n        return producto.idProduct === datos.idProduct;\n      });\n      if (productoExiste !== -1) {\n        carritoEditar.cesta.splice(productoExiste, 1);\n      }\n      localStorage.setItem(`carrito_${mail}`, JSON.stringify(carritoEditar));\n      this.$store.commit(\"setCurrentCartLength\");\n      this.reload();\n    },\n    async cargarProductos(cesta) {\n      let cont = 0;\n      console.log(cesta);\n      while (cont < cesta.length) {\n        const data = await fetch(`${API_URL}productos/${cesta[cont].idProducto}`).then(res => res.json());\n        this.products.push(data);\n        cont += 1;\n      }\n      this.loading = true;\n    },\n    async cargarCarrito(id) {\n      const data = await fetch(`${API_URL}carts/${id}`).then(res => res.json());\n      this.yourCart = data;\n    }\n  },\n  watch: {\n    yourCart(oldval, newVal) {}\n  },\n  components: {\n    NavBar\n  }\n};","map":{"version":3,"mappings":"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","names":["NavBar","API_URL","recarga","name","created","yourCart","JSON","parse","localStorage","getItem","$store","state","currentMail","cartId","$route","query","id","cargarCarrito","cargarProductos","cesta","data","products","loading","reload","methods","eliminarCarrito","userId","idProduct","datos","mail","carritoEditar","productoExiste","findIndex","producto","splice","setItem","stringify","commit","cont","console","log","length","fetch","idProducto","then","res","json","push","watch","oldval","newVal","components"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/CarritoView.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n  <v-container v-if=\"loading\">\n    <v-card\n      color=\"#3853D8\"\n      height=\"150px\"\n      tle\n      flat\n      class=\"d-flex align-center justify-center\"\n      dark\n    >\n      <v-row>\n        <v-col cols=\"12\" sm=\"12\"> <h2 class=\"text-center\">Cesta</h2> </v-col>\n      </v-row>\n    </v-card>\n    <v-list class=\"ma-0 pa-0 estilo\">\n      <v-col\n        cols=\"12\"\n        sm=\"4\"\n        v-for=\"(product, index) in yourCart.cesta\"\n        class=\"pa-0\"\n        :key=\"index\"\n      >\n        <v-card\n          height=\"530\"\n          max-width=\"600\"\n          class=\"d-flex flex-column align-center mb-3\"\n        >\n          <h2>{{ this.products[index].nombre }}</h2>\n          <img height=\"270\" :src=\"this.products[index].imagen\" />\n          <h2>\n            Precio:{{\n              this.products[index].precio * parseInt(product.cantidad)\n            }}\n          </h2>\n\n          <v-list-tile> Cantidad:{{ product.cantidad }} </v-list-tile>\n          <v-dialog transition=\"dialog-top-transition\" width=\"auto\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn\n                icon=\"mdi-minus\"\n                color=\"red\"\n                @click=\"\n                  eliminarCarrito(\n                    this.$store.state.currentUser,\n                    this.products[index].id\n                  );\n                  this.reload();\n                \"\n                style=\"margin-top: 2rem\"\n                v-bind=\"props\"\n              ></v-btn>\n            </template>\n            <template v-slot:default=\"{ isActive }\">\n              <v-card>\n                <v-card-text class=\"centradoAviso\">\n                  <v-icon class=\"text-h2 pa-12\" color=\"red\"\n                    >mdi-delete-circle</v-icon\n                  >\n                  <div class=\"text-h2 pa-12\">\n                    Producto Eliminado del carrito\n                  </div>\n                </v-card-text>\n                <v-card-actions class=\"justify-end\">\n                  <v-btn variant=\"text\" @click=\"isActive.value = false\"\n                    >Close</v-btn\n                  >\n                </v-card-actions>\n              </v-card>\n            </template>\n          </v-dialog>\n        </v-card>\n      </v-col>\n    </v-list>\n\n    <v-container>\n      <v-btn color=\"success\" height=\"70\" style=\"display: flex; margin: 0 auto\"\n        >Proceder Al Pago</v-btn\n      >\n    </v-container>\n  </v-container>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport { API_URL, recarga } from \"@/helpers/basicFunctions.js\";\n/*eslint-disable */\nexport default {\n  name: \"CarritoView\",\n  async created() {\n    this.yourCart = JSON.parse(\n      localStorage.getItem(`carrito_${this.$store.state.currentMail}`)\n    );\n    this.cartId = JSON.parse(this.$route.query.id);\n    await this.cargarCarrito(this.cartId);\n\n    await this.cargarProductos(this.yourCart.cesta);\n  },\n  data: () => ({\n    products: [],\n    loading: false,\n    cartId: null,\n    yourCart: null,\n    reload: recarga,\n  }),\n  methods: {\n    /*\n    async contarProd(id) {\n      let cantidad = 0;\n      const data = await fetch(`${API_URL}carts/${id}`).then((res) =>\n        res.json()\n      );\n      for (let i = 0; i <= data.cesta.length - 1; i++) {\n        cantidad += parseInt(data.cesta[i].cantidad);\n      }\n\n      return cantidad;\n    },*/\n    eliminarCarrito(userId, idProduct) {\n      const datos = {\n        userId,\n        idProduct,\n      };\n      const mail = this.$store.state.currentMail;\n      const carritoEditar = JSON.parse(localStorage.getItem(`carrito_${mail}`));\n      const productoExiste = carritoEditar.cesta.findIndex((producto) => {\n        return producto.idProduct === datos.idProduct;\n      });\n      if (productoExiste !== -1) {\n        carritoEditar.cesta.splice(productoExiste, 1);\n      }\n\n      localStorage.setItem(`carrito_${mail}`, JSON.stringify(carritoEditar));\n      this.$store.commit(\"setCurrentCartLength\");\n\n      this.reload();\n    },\n    async cargarProductos(cesta) {\n      let cont = 0;\n\n      console.log(cesta);\n      while (cont < cesta.length) {\n        const data = await fetch(\n          `${API_URL}productos/${cesta[cont].idProducto}`\n        ).then((res) => res.json());\n        this.products.push(data);\n        cont += 1;\n      }\n      this.loading = true;\n    },\n    async cargarCarrito(id) {\n      const data = await fetch(`${API_URL}carts/${id}`).then((res) =>\n        res.json()\n      );\n      this.yourCart = data;\n    },\n  },\n  watch: {\n    yourCart(oldval, newVal) {},\n  },\n  components: { NavBar },\n};\n</script>\n\n<style scoped>\n.centradoAviso {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n}\n.estilo {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}