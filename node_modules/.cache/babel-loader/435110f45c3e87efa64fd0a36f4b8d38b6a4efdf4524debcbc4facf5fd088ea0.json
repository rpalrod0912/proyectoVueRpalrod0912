{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\n/*eslint-disable */\nexport default {\n  name: \"CarritoView\",\n  async created() {\n    debugger;\n    this.cartId = JSON.parse(this.$route.query.id);\n    await this.cargarCarrito(this.cartId);\n  },\n  data: () => ({\n    products: [],\n    loading: false,\n    cartId: null,\n    yourCart: null\n  }),\n  methods: {\n    async cargarProducto() {\n      let cont = 0;\n      while (cont <= this.yourCart.cesta.length) {\n        const data = await fetch(`http://localhost:3003/v1/api/productos/${this.yourCart.cesta[cont].idProducto}`).then(res => res.json());\n      }\n    },\n    async cargarCarrito(id) {\n      debugger;\n      const data = await fetch(`http://localhost:3003/v1/api/carts/${id}`).then(res => res.json());\n      this.yourCart = data;\n    }\n  },\n  watch: {\n    yourCart(oldval, newVal) {\n      this.loading = true;\n    }\n  },\n  components: {\n    NavBar\n  }\n};","map":{"version":3,"mappings":"AAmDA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C;AACA,eAAe;EACbC,IAAI,EAAE,aAAa;EACnB,MAAMC,OAAO,GAAG;IACd;IAEA,IAAI,CAACC,MAAK,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,EAAE,CAAC;IAC9C,MAAM,IAAI,CAACC,aAAa,CAAC,IAAI,CAACN,MAAM,CAAC;EACvC,CAAC;EACDO,IAAI,EAAE,OAAO;IACXC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdT,MAAM,EAAE,IAAI;IACZU,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,cAAc,GAAG;MACrB,IAAIC,IAAG,GAAI,CAAC;MACZ,OAAOA,IAAG,IAAK,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACC,MAAM,EAAE;QACzC,MAAMR,IAAG,GAAI,MAAMS,KAAK,CACrB,0CAAyC,IAAI,CAACN,QAAQ,CAACI,KAAK,CAACD,IAAI,CAAC,CAACI,UAAW,GAChF,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;MAC7B;IACF,CAAC;IACD,MAAMd,aAAa,CAACD,EAAE,EAAE;MACtB;MACA,MAAME,IAAG,GAAI,MAAMS,KAAK,CAAE,sCAAqCX,EAAG,EAAC,CAAC,CAACa,IAAI,CACtEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAC,CACnB;MACD,IAAI,CAACV,QAAO,GAAIH,IAAI;IACtB;EACF,CAAC;EACDc,KAAK,EAAE;IACLX,QAAQ,CAACY,MAAM,EAAEC,MAAM,EAAE;MACvB,IAAI,CAACd,OAAM,GAAI,IAAI;IACrB;EACF,CAAC;EACDe,UAAU,EAAE;IAAE3B;EAAO;AACvB,CAAC","names":["NavBar","name","created","cartId","JSON","parse","$route","query","id","cargarCarrito","data","products","loading","yourCart","methods","cargarProducto","cont","cesta","length","fetch","idProducto","then","res","json","watch","oldval","newVal","components"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/CarritoView.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n  <v-container v-if=\"loading\">\n    <h2 class=\"display-2 mb-4\">Cesta</h2>\n    <v-list two-line>\n      <div\n        v-for=\"(product, index) in this.yourCart.cesta\"\n        v-bind:key=\"product[index]\"\n      >\n        <v-list-tile avatar>\n          <v-list-tile-avatar>\n            <h2>{{ product.idProducto }}</h2>\n            <img :src=\"product.idProducto\" />\n          </v-list-tile-avatar>\n          <!--\n          <v-list-tile-content>\n            <v-list-tile-title v-html=\"product.title\"></v-list-tile-title>\n            <v-list-tile-sub-title\n              v-html=\"product.sub_title\"\n            ></v-list-tile-sub-title>\n          </v-list-tile-content>\n\n          <v-list-tile> {{ product.price }}$ </v-list-tile>\n-->\n          <v-list-tile-action>\n            <v-text-field\n              :label=\"`Cantidad:${product.cantidad}`\"\n              :value=\"product.cantidad\"\n            ></v-text-field>\n          </v-list-tile-action>\n          <v-list-tile> Cantidad:{{ product.cantidad }} </v-list-tile>\n\n          <v-list-tile> {{ product.price * product.qty }}$ </v-list-tile>\n\n          <v-list-tile-action>\n            <v-btn icon ripple>\n              <v-icon color=\"red lighten-1\">delete</v-icon>\n            </v-btn>\n          </v-list-tile-action>\n        </v-list-tile>\n      </div>\n    </v-list>\n\n    <v-container>\n      <v-btn color=\"success\" larger style=\"float: right\">Go to payment</v-btn>\n    </v-container>\n  </v-container>\n  <h2 v-else>Cargando...</h2>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\n/*eslint-disable */\nexport default {\n  name: \"CarritoView\",\n  async created() {\n    debugger;\n\n    this.cartId = JSON.parse(this.$route.query.id);\n    await this.cargarCarrito(this.cartId);\n  },\n  data: () => ({\n    products: [],\n    loading: false,\n    cartId: null,\n    yourCart: null,\n  }),\n  methods: {\n    async cargarProducto() {\n      let cont = 0;\n      while (cont <= this.yourCart.cesta.length) {\n        const data = await fetch(\n          `http://localhost:3003/v1/api/productos/${this.yourCart.cesta[cont].idProducto}`\n        ).then((res) => res.json());\n      }\n    },\n    async cargarCarrito(id) {\n      debugger;\n      const data = await fetch(`http://localhost:3003/v1/api/carts/${id}`).then(\n        (res) => res.json()\n      );\n      this.yourCart = data;\n    },\n  },\n  watch: {\n    yourCart(oldval, newVal) {\n      this.loading = true;\n    },\n  },\n  components: { NavBar },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}