{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container);\n}","map":{"version":3,"mappings":";;;uBACEA,aAA4BC","names":["_createBlock","_component_v_container"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <v-container> </v-container>\n</template>\n\n<script>\nimport LoginCom from \"@/components/LoginCom.vue\";\nimport RegisterCom from \"@/components/RegisterCom.vue\";\n\nexport default {\n  /*eslint-disable */\n  /*Documentacion de Vuetify Validacion */\n  /*https://vuetifyjs.com/en/components/forms/#vuelidate */\n  data: () => ({\n    valid: true,\n    //emailLogIn: \"\",\n    //pwdLogIn: \"\",\n\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n\n    step: 1,\n\n    validacionNombre: [\n      (val) => !!val || \"El nombre es obligatorio\",\n      (val) =>\n        (val && val.length <= 15) || \"El nombre debe ser menor a 10 caracteres\",\n    ],\n    validacionContrase침a: [\n      (val) =>\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n        \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n    ],\n    validacionMail: [\n      (val) =>\n        /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(val) ||\n        \"Debe contener un @, una extensi칩n . al final. Ejemplo: micorreo@gmail.com\",\n    ],\n    validacionRepetirContra: [\n      (val) =>\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/.test(val) ||\n        \" 8 a 24 caracteres Debe incluir Letras maysuculas y minusculas, un numero y un caracter especial\",\n    ],\n    validacionCheck: [\n      (v) => !!v || \"Debes aceptar terminos y condiciones para registrarte\",\n    ],\n  }),\n  methods: {\n    logIn() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    },\n    register() {\n      console.log(\"Hola\");\n      this.$refs.form.validate();\n    },\n  },\n  props: {\n    source: String,\n  },\n  /*Para validar contrase침as tenemos que llamar a varias variables de data, como es un metodo mas complego,\n    realizamos un metodo para validar en computed\n    llamando variables de data, luiego en template llamamos al metodo en :rules=metodo1.concat(metodo2)\n    para aplicar las reglas de distintos metodos, pues son dos arrays con metodos y buscamos concatenarlos\n    */\n  computed: {\n    passwordConfirmationRule() {\n      return () =>\n        this.registerPwd === this.registerConfirmPwd ||\n        \"Las contrase침as deben coincidir\";\n    },\n  },\n  components: { LoginCom, RegisterCom },\n};\n</script>\n<style scoped>\n.v-application .rounded-bl-xl {\n  border-bottom-left-radius: 300px !important;\n}\n.v-application .rounded-br-xl {\n  border-bottom-right-radius: 300px !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}