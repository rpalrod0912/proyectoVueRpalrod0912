{"ast":null,"code":"/*eslint-disable */\nimport { app, auth, createUserWithEmailAndPassword } from \"@/firebaseConfig/firebaseConfig.js\";\nimport router from \"@/router\";\nimport axios from \"axios\";\nimport { toHome } from \"@/helpers/basicFunctions\";\nimport { API_URL } from \"@/helpers/basicFunctions\";\nexport default {\n  name: \"RegisterCom\",\n  data: () => ({\n    exito: false,\n    userFound: false,\n    valid: true,\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n    reload: toHome\n  }),\n  props: {\n    validacionCheck: {\n      Function\n    },\n    validacionNombre: {\n      Function\n    },\n    validacionContraseña: {\n      Function\n    },\n    validacionMail: {\n      Function\n    },\n    validacionRepetirContra: {\n      Function\n    },\n    passwordConfirmationRule: {\n      Function\n    }\n  },\n  methods: {\n    /*eslint-disable */\n    register() {\n      this.userFound = false;\n      this.exito = false;\n      this.$refs.form.validate();\n      this.registerFireBase();\n    },\n    async registerFireBase() {\n      const registerData = {\n        name: this.registerNombre,\n        lastName: this.registerApellidos,\n        mail: this.registerMail,\n        password: this.registerPwd\n      };\n      debugger;\n      await createUserWithEmailAndPassword(auth, registerData.mail, registerData.password).then(userCredential => {\n        debugger;\n        this.exito = true;\n        this.userFound = false;\n        const user = userCredential;\n        const userId = userCredential.user.uid;\n        this.postForm({\n          id: userId,\n          name: registerData.name,\n          lastName: registerData.lastName,\n          mail: registerData.mail,\n          password: registerData.password\n        });\n        const usuario = userCredential.user;\n        debugger;\n        this.encontrarUsuario(usuario.email);\n        this.$store.commit(\"setCurrentMail\", usuario.email);\n        signOut(auth).then(() => {\n          this.authentication = false;\n          this.$store.commit(\"setCurrentAuth\", this.authentication);\n          this.$store.commit(\"setCurrentUser\", null);\n          this.$store.commit(\"setCurrentCartLength\", null);\n          this.$store.commit(\"setCurrentMail\", null);\n          this.$router.go(\"/login\");\n        }).catch(error => {\n          console.log(\"ALGO OCURRIO\");\n        });\n        /*\n        debugger;\n        if (localStorage.getItem(`carrito_${usuario.email}`) === null) {\n          localStorage.setItem(\n            `carrito_${usuario.email}`,\n            JSON.stringify({ userId: usuario.uid, cesta: [] })\n          );\n          console.log(\"CREADO!!\");\n        }\n        console.log(\"NO CREADO YA EXISTE\");\n        this.reload(this.$router.push(\"/\"));\n        */\n      }).catch(error => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        if (errorMessage === \"Firebase: Error (auth/email-already-in-use).\") {\n          this.exito = false;\n          this.userFound = true;\n          return;\n        }\n      });\n    },\n    async postForm(objetoUsuario) {\n      console.log(objetoUsuario);\n      const data = await axios.post(`${API_URL}users/`, objetoUsuario).then(res => res.data).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["app","auth","createUserWithEmailAndPassword","router","axios","toHome","API_URL","name","data","exito","userFound","valid","registerNombre","registerApellidos","registerMail","registerPwd","registerConfirmPwd","registerChecked","reload","props","validacionCheck","Function","validacionNombre","validacionContraseña","validacionMail","validacionRepetirContra","passwordConfirmationRule","methods","register","$refs","form","validate","registerFireBase","registerData","lastName","mail","password","then","userCredential","user","userId","uid","postForm","id","usuario","encontrarUsuario","email","$store","commit","signOut","authentication","$router","go","catch","error","console","log","errorCode","code","errorMessage","message","objetoUsuario","post","res"],"sourceRoot":"","sources":["/home/rafa/Vue/proyectovue/src/components/RegisterCom.vue"],"sourcesContent":["<template>\n  <v-card-text class=\"mt-12\">\n    <h4 class=\"text-center\">Registrate para crear tu cuenta</h4>\n\n    <v-row align=\"center\" justify=\"center\">\n      <v-col cols=\"12\" sm=\"8\">\n        <v-form ref=\"form\" v-model=\"valid\" miValidacion>\n          <v-row>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-text-field\n                v-model=\"registerNombre\"\n                label=\"Nombre\"\n                outlined\n                dense\n                color=\"blue\"\n                autocomplete=\"false\"\n                class=\"mt-4\"\n                :rules=\"validacionNombre\"\n                required\n              />\n            </v-col>\n            <v-col cols=\"12\" sm=\"6\">\n              <v-text-field\n                v-model=\"registerApellidos\"\n                label=\"Apellidos\"\n                outlined\n                dense\n                color=\"blue\"\n                autocomplete=\"false\"\n                class=\"mt-4\"\n                :rules=\"validacionNombre\"\n                required\n              />\n            </v-col>\n          </v-row>\n          <v-text-field\n            v-model=\"registerMail\"\n            label=\"Correo Electrónico\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            :rules=\"validacionMail\"\n            required\n          />\n          <v-text-field\n            v-model=\"registerPwd\"\n            label=\"Contraseña\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            type=\"password\"\n            :rules=\"validacionContraseña\"\n            required\n          />\n          <v-text-field\n            v-model=\"registerConfirmPwd\"\n            label=\"Repetir Contraseña\"\n            outlined\n            dense\n            color=\"blue\"\n            autocomplete=\"false\"\n            type=\"password\"\n            :rules=\"validacionContraseña.concat(passwordConfirmationRule)\"\n            required\n          />\n          <v-row>\n            <v-col cols=\"12\" sm=\"7\">\n              <v-checkbox\n                v-model=\"registerChecked\"\n                :rules=\"validacionCheck\"\n                label=\"Acepto términos y condiciones\"\n                class=\"mt-n1\"\n                color=\"blue\"\n                required\n              >\n              </v-checkbox>\n            </v-col>\n          </v-row>\n          <h3 style=\"color: red\" v-if=\"userFound\">EL USUARIO YA EXISTE</h3>\n          <h3 style=\"color: green\" v-if=\"exito\">\n            REGISTRO CON EXITO, SESION INICIADA\n          </h3>\n          <v-btn\n            :disabled=\"!valid\"\n            color=\"blue\"\n            @click=\"register()\"\n            dark\n            block\n            tile\n            >REGISTRARME</v-btn\n          >\n        </v-form>\n      </v-col>\n    </v-row>\n  </v-card-text>\n</template>\n\n<script>\n/*eslint-disable */\nimport {\n  app,\n  auth,\n  createUserWithEmailAndPassword,\n} from \"@/firebaseConfig/firebaseConfig.js\";\nimport router from \"@/router\";\nimport axios from \"axios\";\nimport { toHome } from \"@/helpers/basicFunctions\";\nimport { API_URL } from \"@/helpers/basicFunctions\";\n\nexport default {\n  name: \"RegisterCom\",\n  data: () => ({\n    exito: false,\n    userFound: false,\n    valid: true,\n    registerNombre: \"\",\n    registerApellidos: \"\",\n    registerMail: \"\",\n    registerPwd: \"\",\n    registerConfirmPwd: \"\",\n    registerChecked: false,\n    reload: toHome,\n  }),\n  props: {\n    validacionCheck: { Function },\n    validacionNombre: { Function },\n    validacionContraseña: { Function },\n    validacionMail: { Function },\n    validacionRepetirContra: { Function },\n    passwordConfirmationRule: { Function },\n  },\n  methods: {\n    /*eslint-disable */\n    register() {\n      this.userFound = false;\n      this.exito = false;\n      this.$refs.form.validate();\n      this.registerFireBase();\n    },\n    async registerFireBase() {\n      const registerData = {\n        name: this.registerNombre,\n        lastName: this.registerApellidos,\n        mail: this.registerMail,\n        password: this.registerPwd,\n      };\n      debugger;\n      await createUserWithEmailAndPassword(\n        auth,\n        registerData.mail,\n        registerData.password\n      )\n        .then((userCredential) => {\n          debugger;\n          this.exito = true;\n          this.userFound = false;\n          const user = userCredential;\n          const userId = userCredential.user.uid;\n          this.postForm({\n            id: userId,\n            name: registerData.name,\n            lastName: registerData.lastName,\n            mail: registerData.mail,\n            password: registerData.password,\n          });\n          const usuario = userCredential.user;\n          debugger;\n          this.encontrarUsuario(usuario.email);\n          this.$store.commit(\"setCurrentMail\", usuario.email);\n          signOut(auth)\n            .then(() => {\n              this.authentication = false;\n              this.$store.commit(\"setCurrentAuth\", this.authentication);\n              this.$store.commit(\"setCurrentUser\", null);\n              this.$store.commit(\"setCurrentCartLength\", null);\n              this.$store.commit(\"setCurrentMail\", null);\n\n              this.$router.go(\"/login\");\n            })\n            .catch((error) => {\n              console.log(\"ALGO OCURRIO\");\n            });\n          /*\n          debugger;\n          if (localStorage.getItem(`carrito_${usuario.email}`) === null) {\n            localStorage.setItem(\n              `carrito_${usuario.email}`,\n              JSON.stringify({ userId: usuario.uid, cesta: [] })\n            );\n            console.log(\"CREADO!!\");\n          }\n          console.log(\"NO CREADO YA EXISTE\");\n          this.reload(this.$router.push(\"/\"));\n          */\n        })\n\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n\n          if (errorMessage === \"Firebase: Error (auth/email-already-in-use).\") {\n            this.exito = false;\n            this.userFound = true;\n            return;\n          }\n        });\n    },\n    async postForm(objetoUsuario) {\n      console.log(objetoUsuario);\n      const data = await axios\n        .post(`${API_URL}users/`, objetoUsuario)\n        .then((res) => res.data)\n        .catch((error) => console.log(error));\n    },\n  },\n};\n</script>\n<style scoped>\n.v-application .rounded-bl-xl {\n  border-bottom-left-radius: 300px !important;\n}\n.v-application .rounded-br-xl {\n  border-bottom-right-radius: 300px !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}