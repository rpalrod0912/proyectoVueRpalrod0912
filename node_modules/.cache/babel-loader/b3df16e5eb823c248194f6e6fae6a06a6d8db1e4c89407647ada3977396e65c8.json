{"ast":null,"code":"import { createStore } from \"vuex\";\nimport { auth } from \"../firebaseConfig/firebaseConfig.js\";\n/*eslint-disable*/\nimport createPersistedState from \"vuex-persistedstate\";\nexport default createStore({\n  state: {\n    currentAuth: false,\n    currentCart: []\n  },\n  //Necesario plugin persistedState para crear estados persistenes cuando se refresca la pagina\n  plugins: [createPersistedState()],\n  mutations: {\n    setCurrentAuth(state, auth) {\n      state.currentAuth = auth;\n    },\n    setCart(state, cart) {\n      state.currentCart = cart;\n    },\n    logout(state) {\n      state.currentAuth = null;\n    },\n    verifyAuth({\n      commit\n    }) {\n      let self = this;\n      auth.onAuthStateChanged(async function (user) {\n        if (user != null) {\n          self.email = user.email;\n          debugger;\n          self.authentication = true;\n          self.id = user.uid;\n          self.carritoNumero = await self.commit(\"contarProd\", user.uid);\n        } else {\n          self.authentication = false;\n        }\n      });\n    }\n  }\n});","map":{"version":3,"names":["createStore","auth","createPersistedState","state","currentAuth","currentCart","plugins","mutations","setCurrentAuth","setCart","cart","logout","verifyAuth","commit","self","onAuthStateChanged","user","email","authentication","id","uid","carritoNumero"],"sources":["/home/rafa/Vue/proyectovue/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport { auth } from \"../firebaseConfig/firebaseConfig.js\";\n/*eslint-disable*/\nimport createPersistedState from \"vuex-persistedstate\";\nexport default createStore({\n  state: { currentAuth: false, currentCart: [] },\n  //Necesario plugin persistedState para crear estados persistenes cuando se refresca la pagina\n  plugins: [createPersistedState()],\n  mutations: {\n    setCurrentAuth(state, auth) {\n      state.currentAuth = auth;\n    },\n    setCart(state, cart) {\n      state.currentCart = cart;\n    },\n    logout(state) {\n      state.currentAuth = null;\n    },\n\n    verifyAuth({ commit }) {\n      let self = this;\n      auth.onAuthStateChanged(async function (user) {\n        if (user != null) {\n          self.email = user.email;\n          debugger;\n          self.authentication = true;\n          self.id = user.uid;\n          self.carritoNumero = await self.commit(\"contarProd\", user.uid);\n        } else {\n          self.authentication = false;\n        }\n      });\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,IAAI,QAAQ,qCAAqC;AAC1D;AACA,OAAOC,oBAAoB,MAAM,qBAAqB;AACtD,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IAAEC,WAAW,EAAE,KAAK;IAAEC,WAAW,EAAE;EAAG,CAAC;EAC9C;EACAC,OAAO,EAAE,CAACJ,oBAAoB,EAAE,CAAC;EACjCK,SAAS,EAAE;IACTC,cAAc,CAACL,KAAK,EAAEF,IAAI,EAAE;MAC1BE,KAAK,CAACC,WAAW,GAAGH,IAAI;IAC1B,CAAC;IACDQ,OAAO,CAACN,KAAK,EAAEO,IAAI,EAAE;MACnBP,KAAK,CAACE,WAAW,GAAGK,IAAI;IAC1B,CAAC;IACDC,MAAM,CAACR,KAAK,EAAE;MACZA,KAAK,CAACC,WAAW,GAAG,IAAI;IAC1B,CAAC;IAEDQ,UAAU,CAAC;MAAEC;IAAO,CAAC,EAAE;MACrB,IAAIC,IAAI,GAAG,IAAI;MACfb,IAAI,CAACc,kBAAkB,CAAC,gBAAgBC,IAAI,EAAE;QAC5C,IAAIA,IAAI,IAAI,IAAI,EAAE;UAChBF,IAAI,CAACG,KAAK,GAAGD,IAAI,CAACC,KAAK;UACvB;UACAH,IAAI,CAACI,cAAc,GAAG,IAAI;UAC1BJ,IAAI,CAACK,EAAE,GAAGH,IAAI,CAACI,GAAG;UAClBN,IAAI,CAACO,aAAa,GAAG,MAAMP,IAAI,CAACD,MAAM,CAAC,YAAY,EAAEG,IAAI,CAACI,GAAG,CAAC;QAChE,CAAC,MAAM;UACLN,IAAI,CAACI,cAAc,GAAG,KAAK;QAC7B;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}